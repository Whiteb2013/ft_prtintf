1.
стандартный printf выдает warning при пустой строке
warning: zero-length gnu_printf format string [-Wformat-zero-length]

    printf("");
    ft_printf("");
    puts("");

2.
отличается поведение
//1
    printf("test5\n");
    printf("test5_printf\n");
    printf("%hZ\n");
    printf("test5_ft_printf\n");
    ft_printf("%hZ\n");
    puts("");

//2
    puts("test2");
    puts("printf");
    printf("%5%");
    puts("");
    puts("ft_printf");
    ft_printf("%5%");
    puts("");
    puts("");

//3
    puts("test4");
    puts("printf");
    printf("%05%");
    puts("");
    puts("ft_printf");
    ft_printf("%05%");
    puts("");
    puts("");

//4
    puts("test6");
    puts("printf");
    printf("% hZ%");
    puts("");
    puts("ft_printf");
    ft_printf("% hZ%");
    puts("");
    puts("");

//5
    puts("test1");
    puts("printf");
    printf("% Z|test");
    puts("");
    puts("ft_printf");
    ft_printf("% Z|test");
    puts("");
    puts("");

//6 
    puts("test2");
    puts("printf");
    printf("% Z |test");
    puts("");
    puts("ft_printf");
    ft_printf("% Z |test");
    puts("");
    puts("");

//7  
    puts("test3");
    puts("printf");
    printf("% Z%s|test");
    puts("");
    puts("ft_printf");
    ft_printf("% Z%s|test");
    puts("");

//8 
    puts("test8");
    puts("printf");
    printf("%%   %|test");
    puts("");
    puts("ft_printf");
    ft_printf("%%   %|test");
    puts("");
    puts("");

//llu
    printf("%llu\n", 111285212672);
    printf("%i\n", 111285212672);
    puts("");

//9 problem with X (integer base 16)
    puts("test3T");
    puts("printf");
    printf("%x", 12345);
    puts("");
    puts("ft_printf");
    ft_printf("%x", 12345);
    puts("");
    puts("");

//10 and something with %ho (integer base 8)
    puts("test4");
    puts("printf");
    printf("%ho", 123456);
    puts("");
    puts("ft_printf");
    ft_printf("%ho", 123456);
    puts("");
    puts("");

//11
    puts("test4");
    puts("printf");
    printf("%ho", 123456);
    puts("");
    puts("ft_printf");
    ft_printf("%ho", 123456);
    puts("");
    puts("");

//12
    puts("test4");
    puts("printf");
    printf("%hX", 123456);
    puts("");
    puts("ft_printf");
    ft_printf("%hX", 123456);
    puts("");
    puts("");

//13
    puts("test3");
    puts("printf");
    printf("%llx", 9223372036854775808);
    puts("");
    puts("ft_printf");
    ft_printf("%llx", 9223372036854775808);
    puts("");
    puts("");

//14 во втором случае правильное поведение, в первом оно должно быть не определено
    puts("test1");
    puts("printf");
    printf("%ll#x", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%ll#x", 9223372036854775807);
    puts("");
    puts("");

    puts("test2");
    puts("printf");
    printf("%#llx", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%#llx", 9223372036854775807);
    puts("");
    puts("");

//15
    puts("test4");
    puts("printf");
    printf("%#.x %#.0x", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("%#.x %#.0x", 0, 0);
    puts("");
    puts("");

    puts("test4");
    puts("printf");
    printf("%.x %.0x", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("%.x %.0x", 0, 0);
    puts("");
    puts("");

    puts("test4");
    puts("printf");
    printf("%5.x %5.0x", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("%5.x %5.0x", 0, 0);
    puts("");
    puts("");

//16
    char *str = "abs";
    puts("test4");
    puts("printf");
    printf("%s", str);
    puts("");
    puts("ft_printf");
    ft_printf("%s", str);
    puts("");
    puts("");

//17
    puts("test4");
    puts("printf");
    printf("%s", "abc");
    puts("");
    puts("ft_printf");
    ft_printf("%s", "abc");
    puts("");
    puts("");

//18
    puts("test4");
    puts("printf");
    printf("null %c and text", 0);
    puts("");
    puts("ft_printf");
    ft_printf("null %c and text", 0);
    puts("");
    puts("");

//19
    puts("test1");
    puts("printf");
    printf("@moulitest: %.o %.0o", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("@moulitest: %.o %.0o", 0, 0);
    puts("");
    puts("");

    puts("test2");
    puts("printf");
    printf("@moulitest: %5.o %5.0o", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("@moulitest: %5.o %5.0o", 0, 0);
    puts("");
    puts("");

    puts("test3");
    puts("printf");
    printf("@moulitest: %#.o %#.0o", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("@moulitest: %#.o %#.0o", 0, 0);
    puts("");
    puts("");

//20  // warning: too many arguments for format [-Wformat-extra-args]
    puts("test1");
    puts("printf");
    printf("%5+d", 42);
    puts("");
    puts("ft_printf");
    ft_printf("%5+d", 42);
    puts("");
    puts("");

    puts("test1");
    puts("printf");
    printf("%5+d", -42);
    puts("");
    puts("ft_printf");
    ft_printf("%5+d", -42);
    puts("");
    puts("");

    puts("test1");
    puts("printf");
    printf("%-5+d", 42);
    puts("");
    puts("ft_printf");
    ft_printf("%-5+d", 42);
    puts("");
    puts("");

    puts("test1");
    puts("printf");
    printf("%-5+d", -42);
    puts("");
    puts("ft_printf");
    ft_printf("%-5+d", -42);
    puts("");
    puts("");

//21 ????????????????????????????????????
    printf("%jd", 9223372036854775807);
    printf("%jd", -9223372036854775808);
    printf("%zd", 4294967295);
    printf("%zd", 4294967296);
    printf("%zd", -0);
    printf("%zd", -1);

//23
    puts("test13");
    puts("printf");
    printf("%.d %.0d", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("%.d %.0d", 0, 0);
    puts("");
    puts("");

    puts("test14");
    puts("printf");
    printf("%5.d %5.0d", 0, 0);
    puts("");
    puts("ft_printf");
    ft_printf("%5.d %5.0d", 0, 0);
    puts("");
    puts("");

//24
    puts("test4");
    puts("printf");
    printf("% u", 4294967295);
    puts("");
    puts("ft_printf");
    ft_printf("% u", 4294967295);
    puts("");
    puts("");

    puts("test5");
    puts("printf");
    printf("%+u", 4294967295);
    puts("");
    puts("ft_printf");
    ft_printf("%+u", 4294967295);
    puts("");
    puts("");

//25
    puts("test4");
    puts("printf");
    printf("%lu", 4294967295);
    puts("");
    puts("ft_printf");
    ft_printf("%lu", 4294967295);
    puts("");
    puts("");

//26
    puts("test4");
    puts("printf");
    printf("%lu", 4294967295);
    puts("");
    puts("ft_printf");
    ft_printf("%lu", 4294967295);
    puts("");
    puts("");

    puts("test4");
    puts("printf");
    printf("%lu", 4294967296);
    puts("");
    puts("ft_printf");
    ft_printf("%lu", 4294967296);
    puts("");
    puts("");

    puts("test4");
    puts("printf");
    printf("%lu", -42);
    puts("");
    puts("ft_printf");
    ft_printf("%lu", -42);
    puts("");
    puts("");

//27
    puts("test4");
    puts("printf");
    printf("%llu", 4999999999);
    puts("");
    puts("ft_printf");
    ft_printf("%llu", 4999999999);
    puts("");
    puts("");

//28
    puts("test4");
    puts("printf");
    printf("%ju", 4999999999);
    puts("");
    puts("ft_printf");
    ft_printf("%ju", 4999999999);
    puts("");
    puts("");

    puts("test4");
    puts("printf");
    printf("%ju", 4294967296);
    puts("");
    puts("ft_printf");
    ft_printf("%ju", 4294967296);
    puts("");
    puts("");

//29
    puts("test0");
    puts("printf");
    printf("%U", 4294967295);
    puts("");
    puts("ft_printf");
    ft_printf("%U", 4294967295);
    puts("");
    puts("");

    puts("test1");
    puts("printf");
    printf("%hU", 4294967296);
    puts("");
    puts("ft_printf");
    ft_printf("%hU", 4294967296);
    puts("");
    puts("");

    puts("test2");
    puts("printf");
    printf("%U", 4294967296);
    puts("");
    puts("ft_printf");
    ft_printf("%U", 4294967296);
    puts("");
    puts("");

//30
    puts("test0");
    puts("printf");
    printf("@moulitest: %.5u", 42);
    puts("");
    puts("ft_printf");
    ft_printf("@moulitest: %.5u", 42);
    puts("");
    puts("");
    
//31
    puts("test0");
    puts("printf");
    printf("%zhd", 4294967296);
    puts("");
    puts("ft_printf");
    ft_printf("%zhd", 4294967296);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("%jzd", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%jzd", 9223372036854775807);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("%jhd", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%jhd", 9223372036854775807);
    puts("");
    puts("");
    
//32
    puts("test0");
    puts("printf");
    printf("%lhl", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%lhl", 9223372036854775807);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("%lhlz", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%lhlz", 9223372036854775807);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("%zj", 9223372036854775807);
    puts("");
    puts("ft_printf");
    ft_printf("%zj", 9223372036854775807);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("%lhh", 2147483647);
    puts("");
    puts("ft_printf");
    ft_printf("%lhh", 2147483647);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("%hhld", 128);
    puts("");
    puts("ft_printf");
    ft_printf("%hhld", 128);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("@main_ftprintf: %####0000 33..1..#00d\n", 256);
    puts("");
    puts("ft_printf");
    ft_printf("@main_ftprintf: %####0000 33..1..#00d\n", 256);
    puts("");
    puts("");

    puts("test0");
    puts("printf");
    printf("@main_ftprintf: %####0000 33..1d", 256);
    puts("");
    puts("ft_printf");
    ft_printf("@main_ftprintf: %####0000 33..1d", 256);
    puts("");
    puts("");

//33
    puts("test0");
    puts("printf");
    printf("@main_ftprintf: %###-#0000 33...12..#0+0d", 256);
    puts("");
    puts("ft_printf");
    ft_printf("@main_ftprintf: %###-#0000 33...12..#0+0d", 256);
    puts("");
    puts("");